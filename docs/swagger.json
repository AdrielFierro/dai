{
  "openapi": "3.0.0",
  "info": {
    "title": "Group 13 - DAI REST API Swagger - Lattice APP",
    "description": "<h3><b>This is a REST API Swagger for the TPO of DAI Subject<b></h3><br>\n   <img width=\"250\" align=\"left\" src=\"https://i.imgur.com/T1kfbAM.png\"/>\nTeacher: Christian Mazzeo<br>\nStudents:<br> -Adriel Fierro <br> -Gonzalo Mandadrino <br> -Kevin Cahuana <br>-Tomas Garberi\n",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/ADRIFIERRO/TP-DAI-Swagger/1.0.0",
      "description": "SwaggerHub API Auto Mocking",
      "variables": {
        "basePath": {
          "default": "v2",
          "enum": [
            "v1",
            "v2"
          ]
        }
      }
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "API health status",
        "description": "API health status",
        "operationId": "healthID",
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Health"
                }
              }
            }
          }
        }
      }
    },
    "/sessions/login": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Login",
        "description": "login a user with email & password\n",
        "operationId": "loginID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/sessions/register": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Register",
        "description": "Create a user with email & password",
        "operationId": "registerID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "user created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreation"
                }
              }
            }
          },
          "500": {
            "description": "There was an error in the data of the user"
          }
        }
      }
    },
    "/sessions/refresh": {
      "put": {
        "tags": [
          "Sessions"
        ],
        "summary": "refresh token",
        "description": "refresh token\n",
        "operationId": "refreshTokenID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Session"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/sessions/logout": {
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Logout",
        "description": "Logout\n",
        "operationId": "logoutID",
        "responses": {
          "200": {
            "description": "logged out"
          },
          "400": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/sessions/password/reset": {
      "put": {
        "tags": [
          "Sessions"
        ],
        "summary": "reset password",
        "description": "Reset password\n",
        "operationId": "resetPasswordID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Usermail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Email not found"
          }
        }
      }
    },
    "/otp/validate": {
      "post": {
        "tags": [
          "Otp"
        ],
        "summary": "validate a OTP",
        "description": "validate One Time Password to validate login\n",
        "operationId": "postvalidateOTPId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TOPT"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "code approved"
          },
          "400": {
            "description": "Email not found"
          }
        }
      }
    },
    "/otp/send": {
      "post": {
        "tags": [
          "Otp"
        ],
        "summary": "Send a mail to your email for the OTP",
        "description": "Send a mail to your email for the OTP\n",
        "operationId": "getvalidateOTPId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Usermail"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "code approved"
          },
          "400": {
            "description": "Email not found"
          }
        }
      }
    },
    "/users": {
      "description": "Users CRUD",
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Search for a user or users",
        "description": "You can use search by name, use pagination and orderby\n",
        "operationId": "getAllUsersID",
        "parameters": [
          {
            "name": "contains",
            "in": "query",
            "description": "pass a search string for looking up users",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "description": "number of records to skip for pagination",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of records to return",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 50,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "pass an search string to order the result",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad input parameter"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "retrieve a specific user by id",
        "description": "retrieve a specific user by id\n",
        "operationId": "getSpecificUserID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "pass an id to retrieve a specific user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "user id not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "update my user",
        "description": "Update my user",
        "operationId": "updateUserID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "pass an id to retrieve a specific user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "requestBody": {
          "description": "Inventory item to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "user updated"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "delete my user",
        "description": "Delete my user",
        "operationId": "deleteUserID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "pass an id to retrieve a specific user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user deleted"
          },
          "400": {
            "description": "UserId not found"
          },
          "500": {
            "description": "You are not the owner of the id"
          }
        }
      }
    },
    "/users/{userId}/comments": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "retrieve a specific users quantity of comments made",
        "description": "retrieve a specific user comments\n",
        "operationId": "getSpecificUserComments",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "pass an id to retrieve a specific user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/users/{userId}/posts": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "retrieve a specific users posts by id",
        "description": "retrieve a specific user posts by id\n",
        "operationId": "getSpecificUserPostsID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "pass an id to retrieve a specific user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/users/{userId}/posts/favorites": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "retrieve a specific users posts by id",
        "description": "retrieve a specific user posts favorites\n",
        "operationId": "getSpecificUserPostsFavorites",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "pass an id to retrieve a specific user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/users/{userId}/followers": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "retrieve a specific user followers by id",
        "description": "retrieve a specific user followers by id\n",
        "operationId": "getSpecificUserFollowersID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "pass an id to retrieve a specific user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/users/{userId}/following": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "retrieve a specific user following users by id",
        "description": "retrieve a specific user following users by id\n",
        "operationId": "getSpecificUserfollowingID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "pass an id to retrieve a specific user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/users/{userId}/follow": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "follow a specific user by id",
        "description": "follow specific user by id\n",
        "operationId": "followSpecificUserID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "pass an id to retrieve a specific user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/users/{userId}/unfollow": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "unfollows a specific user by id",
        "description": "unfollow a specific user by id\n",
        "operationId": "unfollowSpecificUserID",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "pass an id to retrieve a specific user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "User not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/posts/{postId}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "retrieve a specific post by id",
        "description": "retrieve a specific post by id\n",
        "operationId": "getSpecificPostID",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "pass an id to retrieve a specific post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Post not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "deletes specific post by id",
        "description": "deletes specific post by id",
        "operationId": "deleteSpecificPostID",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "pass an id to delete a specific post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the post to delete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Post not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/posts/{postId}/{imageId}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "retrieve a specific image by id of a specific post",
        "description": "retrieve a specific post by id\n",
        "operationId": "getSpecificImageID",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "pass an id to retrieve a specific post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric postId of the post to get",
              "default": 2
            }
          },
          {
            "name": "imageId",
            "in": "path",
            "description": "pass an id to retrieve a specific image of a post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric imageId of the image to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Post not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/posts": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "posts a  post",
        "description": "posts a post\n",
        "operationId": "postPostID",
        "requestBody": {
          "description": "here goes post information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostPost"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not logged"
          },
          "500": {
            "description": "the post was not created properly"
          }
        }
      }
    },
    "/timeline": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "retrieves timeline",
        "description": "Recupera la timeline. La respuesta es un único elemento, un vector de enteros.\n",
        "operationId": "getTimelineID",
        "parameters": [
          {
            "name": "idUsuario",
            "in": "query",
            "description": "ID del usuario que solicita la timeline",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 123
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Devuelve un vector de enteros que representan los IDs de los posts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "No estás autenticado"
          }
        }
      }
    },
    "/get/{postId}/likes": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "retrieves likes from post",
        "description": "retrieves likes from post\n",
        "operationId": "getLikesPostID",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "pass an id to retrieve a specific post likes",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/posts/{postId}/likes": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "adds like from a user to a post",
        "description": "adds like from a user to a post. Posts userID to add to post.\n",
        "operationId": "postLikePostID",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "pass an id to retrieve a specific post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer"
                }
              }
            }
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/posts/{postId}/favorite": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "adds to favorite a post",
        "description": "adds to favorite a post\n",
        "operationId": "getFavoritePostID",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "pass an id to retrieve a specific post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Post not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      },
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "adds to favorite a post",
        "description": "adds to favorite a post\n",
        "operationId": "postFavoritePostID",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "pass an id to retrieve a specific post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not logged"
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "removes from favorites a post",
        "description": "'removes from favorites a post'\n",
        "operationId": "deleteFavoritePostID",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "pass an id to retrieve a specific post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Post not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/comments/{postId}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "retrieve all the comments of a post",
        "description": "retrieve all the comments of a post\n",
        "operationId": "getCommentsPostID",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "pass an id to retrieve a specific post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Post not found"
          },
          "401": {
            "description": "You are not logged"
          },
          "402": {
            "description": "comment not found"
          }
        }
      },
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "post a comment on a post",
        "description": "post a comment on a post\n",
        "operationId": "postCommentsPostID",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "pass an id to retrieve a specific post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Comment"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Post not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/comments/{postId}/{commentId}": {
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "delete the comment of a post",
        "description": "retrieve all the comments of a post\n",
        "operationId": "deleteCommentsPostID",
        "parameters": [
          {
            "name": "postId",
            "in": "path",
            "description": "pass an id to retrieve a specific post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "pass an id to delete a specific comment of the post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "400": {
            "description": "comment or post not found"
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/ads": {
      "get": {
        "tags": [
          "Ads"
        ],
        "summary": "retrieve an ad",
        "description": "retrieve an ad\n",
        "operationId": "getAdsID",
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Ad"
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/ads/url/{adId}": {
      "get": {
        "tags": [
          "Ads"
        ],
        "summary": "retrieve an ads url",
        "description": "retrieve an ads url\n",
        "operationId": "getAdsUrlID",
        "parameters": [
          {
            "name": "adId",
            "in": "path",
            "description": "pass an id to retrieve a specific ad",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric adId of the ad to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/adsUrl"
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/ads/{adId}/share": {
      "post": {
        "tags": [
          "Ads"
        ],
        "summary": "share an ad",
        "description": "retrieve all the comments of a post\n",
        "operationId": "shareAdsID",
        "parameters": [
          {
            "name": "adId",
            "in": "path",
            "description": "pass an id to retrieve a specific post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    },
    "/ads/{adId}/visit": {
      "get": {
        "tags": [
          "Ads"
        ],
        "summary": "visit an ad",
        "description": "get the url of an ad\n",
        "operationId": "visitAdsID",
        "parameters": [
          {
            "name": "adId",
            "in": "path",
            "description": "pass an id to retrieve a specific post",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Numeric userID of the user to get",
              "default": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "search results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Post"
                  }
                }
              }
            }
          },
          "401": {
            "description": "You are not logged"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "description",
          "email",
          "id",
          "name",
          "password",
          "urlImage",
          "userName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "uuid",
            "example": 1
          },
          "description": {
            "type": "string",
            "example": "hello this is john doe descriptions"
          },
          "name": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "password": {
            "type": "string",
            "example": "pass1234"
          },
          "urlImage": {
            "type": "string",
            "example": "https://i.imgur.com/T1kfbAM.png"
          }
        }
      },
      "UserCreation": {
        "required": [
          "email",
          "name",
          "password",
          "userName"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John"
          },
          "userName": {
            "type": "string",
            "example": "johnTheUsername"
          },
          "email": {
            "type": "string",
            "example": "John.doe@test.com.ar"
          },
          "password": {
            "type": "string",
            "example": "pass1234"
          }
        }
      },
      "UserLogin": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "John.doe@test.com.ar"
          },
          "password": {
            "type": "string",
            "example": "pass1234"
          }
        }
      },
      "Usermail": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "John.doe@test.com.ar"
          },
          "password": {
            "type": "string",
            "example": "pass1234"
          }
        }
      },
      "adsUrl": {
        "required": [
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "www.mercadolibre.com"
          }
        }
      },
      "Session": {
        "required": [
          "accessToken",
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "afsdfasdfasfd.234234234.asdfasdfasdfasfd"
          },
          "refreshToken": {
            "type": "string",
            "example": "afsdfasdfasfd.234234234.asdfasdfasdfasfd"
          }
        }
      },
      "Comment": {
        "required": [
          "comment",
          "commentId",
          "postId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "commentId": {
            "type": "integer",
            "example": 1
          },
          "postId": {
            "type": "integer",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "example": 1
          },
          "comment": {
            "type": "string",
            "example": "this is a test comment"
          }
        }
      },
      "Health": {
        "required": [
          "running"
        ],
        "type": "object",
        "properties": {
          "running": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "TOPT": {
        "required": [
          "code",
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "John.doe@test.com.ar"
          },
          "code": {
            "type": "integer",
            "example": 1234
          }
        }
      },
      "Ad": {
        "required": [
          "adId",
          "image",
          "url"
        ],
        "type": "object",
        "properties": {
          "aId": {
            "type": "integer",
            "example": 1
          },
          "image": {
            "type": "string",
            "example": "https://i.imgur.com/T1kfbAM.png"
          },
          "url": {
            "type": "string",
            "example": "https://i.imgur.com/T1kfbAM.png"
          }
        }
      },
      "Post": {
        "required": [
          "description",
          "image",
          "postId",
          "userId"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "mi logo"
          },
          "image": {
            "type": "string",
            "example": "https://i.imgur.com/T1kfbAM.png"
          },
          "postId": {
            "type": "integer",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "PostPost": {
        "required": [
          "description",
          "image",
          "location",
          "userId"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "mi logo"
          },
          "image": {
            "type": "string",
            "example": "https://i.imgur.com/T1kfbAM.png"
          },
          "postId": {
            "type": "integer",
            "example": 1
          },
          "userId": {
            "type": "integer",
            "example": 1
          },
          "location": {
            "type": "integer"
          }
        }
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "posts": {
            "type": "array",
            "description": "Vector de IDs de posts",
            "items": {
              "type": "integer"
            }
          }
        }
      }
    }
  }
}